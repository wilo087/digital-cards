# import * from '../commons.gql'

type User implements baseModel {
    id: ID!
    firstName: String!
    lastName: String!
    email: String!
    picture: String
    role: String!
    createdAt: DateTime!
    updatedAt: DateTime
    deletedAt: DateTime
}

type AuthPayload {
    token: String!
    user: User!
}

input UserInput {
    firstName: String!
    lastName: String!
    email: String!
    password: String!
    picture: String
}

type Query {
    me: User
    getUsers: [User]
    # getUser(id: ID!): User
}

type Mutation {
    signup(input: UserInput!): AuthPayload
    login(email: String!, password: String!): AuthPayload
    updateUser(id: ID!, input: UserInput!): User
    deleteUser(id: ID!): User
}