# import * from '../commons.gql'
# import * from '../company/company.gql'

type User implements baseModel {
  id: Int!
  firstName: String!
  lastName: String!
  email: String!
  picture: String
  role: String!
  password: String
  companies: [Company!]!
  socialNetworks: [SocialNetwork!]!
  usersOnCompanies: [UsersOnCompanies!]!
  createdAt: DateTime!
  updatedAt: DateTime!
}

type AuthPayload {
    token: String!
    user: User!
}

input UserInput {
    firstName: String!
    lastName: String!
    email: String!
    password: String!
    picture: String
}

type UsersOnCompanies {
  company: Company!
  user: User!
  createdAt: DateTime!
  updatedAt: DateTime!
}

type SocialNetwork {
  id: Int!
  name: String!
  url: String!
  user: User!
  createdAt: DateTime!
  updatedAt: DateTime!
}

type Query {
    me: User
    getUsers: [User]
    # getUser(id: ID!): User
}

type Mutation {
    signup(input: UserInput!): AuthPayload
    login(email: String!, password: String!): AuthPayload
    updateUser(id: ID!, input: UserInput!): User
    deleteUser(id: ID!): User
}
